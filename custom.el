;; ---------------
;; Autogenerated customization stuff
;; ---------------
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ccls-args
   (quote
    ("--log-file=/tmp/ccls.log" "-v=1" "--init={\"compilationDatabaseDirectory\": \"build\"}")))
 '(ccls-initialization-options (quote (quote (:compilationDatabaseDirectory "src"))))
 '(comment-padding "*  ")
 '(dark-mode t)
 '(light-mode nil)
 '(magit-commit-arguments (quote ("-S")))
 '(org-agenda-files (quote ("~/Sync/notes/org-test.org")))
 '(package-selected-packages
   (quote
    (telega lua-mode dune hydra all-the-icons markdown-mode+ utop ocp-indent merlin-eldoc merlin tuareg yaml-mode groovy-mode go-mode guix slime emojify restclient folding web-mode php-mode company-coq proof-general csv-mode company-arduino arduino-mode flymd impatient-mode web-beautify ein auctex pandoc-mode neotree racket-mode company-quickhelp clang-format ccls cquery column-enforce-mode rainbow-delimiters pdf-tools gradle-mode smartparens geiser yasnippet-snippets yasnippet projectile use-package treemacs lsp-java flycheck lsp-ui company-lsp company lsp-mode magit doom-themes doom-modeline)))
 '(safe-local-variable-values
   (quote
    ((_ progn
	(c-set-offset
	 (quote substatement-open)
	 0))
     (c-file-style
      (progn
	(c-add-style "PY2020 style"
		     (quote
		      ("gnu"
		       (c-basic-offset . 4)
		       (c-offsets-alist
			(block-close . 0)
			(defun-block-intro . +)
			(defun-close . 0)
			(defun-open . 0)
			(statement . 0)
			(statement-block-intro . +)
			(substatement-open . 0)
			(topmost-intro . 0)
			(access-label . -)
			(annotation-top-cont . 0)
			(annotation-var-cont . +)
			(arglist-close . c-lineup-close-paren)
			(arglist-cont c-lineup-gcc-asm-reg 0)
			(arglist-cont-nonempty . c-lineup-arglist)
			(arglist-intro . c-lineup-arglist-intro-after-paren)
			(block-open . 0)
			(brace-entry-open . 0)
			(brace-list-close . 0)
			(brace-list-entry . c-lineup-under-anchor)
			(brace-list-intro . c-lineup-arglist-intro-after-paren)
			(brace-list-open . +)
			(c . c-lineup-C-comments)
			(case-label . 0)
			(catch-clause . 0)
			(class-close . 0)
			(class-open . 0)
			(comment-intro . c-lineup-comment)
			(composition-close . 0)
			(composition-open . 0)
			(cpp-define-intro c-lineup-cpp-define +)
			(cpp-macro . -1000)
			(cpp-macro-cont . +)
			(do-while-closure . 0)
			(else-clause . 0)
			(extern-lang-close . 0)
			(extern-lang-open . 0)
			(friend . 0)
			(func-decl-cont . +)
			(inclass . +)
			(incomposition . +)
			(inexpr-class . +)
			(inexpr-statement . +)
			(inextern-lang . +)
			(inher-cont . c-lineup-multi-inher)
			(inher-intro . +)
			(inlambda . c-lineup-inexpr-block)
			(inline-close . 0)
			(inline-open . 0)
			(inmodule . +)
			(innamespace . +)
			(knr-argdecl . 0)
			(knr-argdecl-intro . 5)
			(label . 0)
			(lambda-intro-cont . +)
			(member-init-cont . c-lineup-multi-inher)
			(member-init-intro . +)
			(module-close . 0)
			(module-open . 0)
			(namespace-close . 0)
			(namespace-open . 0)
			(objc-method-args-cont . c-lineup-ObjC-method-args)
			(objc-method-call-cont c-lineup-ObjC-method-call-colons c-lineup-ObjC-method-call +)
			(objc-method-intro .
					   [0])
			(statement-case-intro . +)
			(statement-case-open . +)
			(statement-cont . +)
			(stream-op . c-lineup-streamop)
			(string . -1000)
			(substatement . +)
			(substatement-label . 0)
			(template-args-cont c-lineup-template-args +)
			(topmost-intro-cont first c-lineup-topmost-intro-cont c-lineup-gnu-DEFUN-intro-cont))))))
      "PY2020 style")
     (style c-add-style "PY2020 style"
	    (quote
	     ("gnu"
	      (c-basic-offset . 4)
	      (c-offsets-alist
	       (block-close . 0)
	       (defun-block-intro . +)
	       (defun-close . 0)
	       (defun-open . 0)
	       (statement . 0)
	       (statement-block-intro . +)
	       (substatement-open . 0)
	       (topmost-intro . 0)
	       (access-label . -)
	       (annotation-top-cont . 0)
	       (annotation-var-cont . +)
	       (arglist-close . c-lineup-close-paren)
	       (arglist-cont c-lineup-gcc-asm-reg 0)
	       (arglist-cont-nonempty . c-lineup-arglist)
	       (arglist-intro . c-lineup-arglist-intro-after-paren)
	       (block-open . 0)
	       (brace-entry-open . 0)
	       (brace-list-close . 0)
	       (brace-list-entry . c-lineup-under-anchor)
	       (brace-list-intro . c-lineup-arglist-intro-after-paren)
	       (brace-list-open . +)
	       (c . c-lineup-C-comments)
	       (case-label . 0)
	       (catch-clause . 0)
	       (class-close . 0)
	       (class-open . 0)
	       (comment-intro . c-lineup-comment)
	       (composition-close . 0)
	       (composition-open . 0)
	       (cpp-define-intro c-lineup-cpp-define +)
	       (cpp-macro . -1000)
	       (cpp-macro-cont . +)
	       (do-while-closure . 0)
	       (else-clause . 0)
	       (extern-lang-close . 0)
	       (extern-lang-open . 0)
	       (friend . 0)
	       (func-decl-cont . +)
	       (inclass . +)
	       (incomposition . +)
	       (inexpr-class . +)
	       (inexpr-statement . +)
	       (inextern-lang . +)
	       (inher-cont . c-lineup-multi-inher)
	       (inher-intro . +)
	       (inlambda . c-lineup-inexpr-block)
	       (inline-close . 0)
	       (inline-open . 0)
	       (inmodule . +)
	       (innamespace . +)
	       (knr-argdecl . 0)
	       (knr-argdecl-intro . 5)
	       (label . 0)
	       (lambda-intro-cont . +)
	       (member-init-cont . c-lineup-multi-inher)
	       (member-init-intro . +)
	       (module-close . 0)
	       (module-open . 0)
	       (namespace-close . 0)
	       (namespace-open . 0)
	       (objc-method-args-cont . c-lineup-ObjC-method-args)
	       (objc-method-call-cont c-lineup-ObjC-method-call-colons c-lineup-ObjC-method-call +)
	       (objc-method-intro .
				  [0])
	       (statement-case-intro . +)
	       (statement-case-open . +)
	       (statement-cont . +)
	       (stream-op . c-lineup-streamop)
	       (string . -1000)
	       (substatement . +)
	       (substatement-label . 0)
	       (template-args-cont c-lineup-template-args +)
	       (topmost-intro-cont first c-lineup-topmost-intro-cont c-lineup-gnu-DEFUN-intro-cont)))))
     (ccls-args quote
		("--log-file=/tmp/ccls.log" "-v=1"))
     (ccls-args quote
		("--log-file=/tmp/ccls.log -v=1"))
     (ccls-args . "--log-file=/tmp/ccls.log -v=1")
     (ccls-initialization-options quote
				  (:compilationDatabaseDirectory "src"))
     (eval modify-syntax-entry 43 "'")
     (eval modify-syntax-entry 36 "'")
     (eval modify-syntax-entry 126 "'")
     (bug-reference-bug-regexp . "<https?://\\(debbugs\\|bugs\\)\\.gnu\\.org/\\([0-9]+\\)>")))))
 
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
